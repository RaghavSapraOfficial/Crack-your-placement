class Solution {
    // 22 july Raghav Sapra
    vector<int> nextSmallerElement(vector<int>&a , int n){
        stack<int>st;
        st.push(-1);
        vector<int>next(n);
        for(int i=n-1;i>=0;i--){
            int curr = a[i];
            while(st.top() != -1 && a[st.top()] >= curr){
                st.pop();
            }
            next[i] = st.top();
            st.push(i);
        }
        return next;
    }
    vector<int> prevSmallerElement(vector<int>&a , int n){
        stack<int>st;
        st.push(-1);
        vector<int>next(n);
        for(int i=0;i<n;i++){
            int curr = a[i];
            while(st.top() != -1 && a[st.top()] >= curr){
                st.pop();
            }
            next[i] = st.top();
            st.push(i);
        }
        return next;
    }
public:
    int largestRectangleArea(vector<int>& a) {
        int n=a.size();
        vector<int>next(n),prev(n);
        next = nextSmallerElement(a,n);
        prev = prevSmallerElement(a,n);
        int area=INT_MIN;
        for(int i=0;i<n;i++){
            int length = a[i];
            if(next[i] == -1){
                next[i] = n;
            }
            int breadth = next[i] - prev[i] - 1;
            int newArea = length * breadth;
            area = max(area,newArea);
        }
        return area;

    }
};